# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
# endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt
# https://github.com/SirVer/ultisnips/blob/2c83e40ce66814bf813457bb58ea96184ab9bb81/doc/UltiSnips.txt#L511
# https://github.com/SirVer/ultisnips/blob/2c83e40ce66814bf813457bb58ea96184ab9bb81/doc/UltiSnips.txt#L821

snippet ::succeeds-under-relation-⊱::
⊱
endsnippet

snippet ::middle-dot-·:: "· Middle Dot"
·
endsnippet

snippet ::real-numbers-ℝ::
ℝ
endsnippet

snippet ::function-𝑓::
𝑓
endsnippet


snippet ::command-⌘::
⌘
endsnippet

snippet ::option-⌥::
⌥
endsnippet

snippet ::shift-⇧::
⇧
endsnippet

snippet ::return-⏎::
⏎
endsnippet

snippet ::backspace-⌫::
⌫
endsnippet

snippet ::vim-nf-:: "Nerd Font: Vim "
::vim-::
endsnippet


# emoji aliases
snippet ::blocked-⛔::
⛔${0}
endsnippet
snippet ::error-⛔::
⛔${0}
endsnippet
snippet ::follow-up-⤴️::
⤴️ ${0}
endsnippet
snippet ::downstream-🌊:: "downstream-🌊"
🌊 
endsnippet
snippet ::okay-🍏::
🍏${0}
endsnippet
snippet ::waiting-⏰::
⏰${0}
endsnippet
snippet ::timebox-⏳::
⏳${0}
endsnippet
snippet ::todo-🔘::
🔘${0}
endsnippet
snippet ::done-✅::
✅${0}
endsnippet
snippet ::progress-🍏::
🍏${0}
endsnippet
snippet ::wip-🔩::
🔩${0}
endsnippet
snippet ::failed-❌::
❌${0}
endsnippet
snippet ::alert-🚨::
🚨${0}
endsnippet
snippet ::drain-🚰::
🚰${0}
endsnippet
snippet ::thunderbolt-⚡:: "thunderbolt"
⚡
endsnippet
snippet ::mastery-⚡:: "thunderbolt"
⚡
endsnippet
snippet ::parallel-🛤️:: "parallel"
🛤️ 
endsnippet

snippet ::date-time::
*`date +'%a %H:%M'`*
endsnippet
snippet ::date-today-long::
*`date +'%d %B %Y (%A)'`*
endsnippet
snippet ::date-today-short::
*`date +'%d %b %Y'`*
endsnippet
snippet ::date-month::
*`date +'%B %Y'`*
endsnippet
snippet ::today-long::
*`date +'%d %B %Y (%A)'`*
endsnippet
snippet ::today-short::
*`date +'%d %b %Y'`*
endsnippet
