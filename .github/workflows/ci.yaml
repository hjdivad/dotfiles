# https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions
#
# see https://github.com/folke/lazy.nvim/blob/main/.github/workflows/ci.yml
name: CI

on:
  pull_request:
  push:
    branches:
      - master
    tags:
      - '*'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt,clippy

      - name: cargo fmt
        uses: actions-rust-lang/rustfmt@v1
        with:
          manifest-path: packages/binutils/Cargo.toml

      - name: cargo clippy
        run: "cd packages/binutils && cargo clippy -- -D warnings"

  test-nvim:
    name: test nvim
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:

      - name: Environment information
        run: |
          uname
          uname -a

      - uses: actions/checkout@v4

      - name: Install fzf
        run: sudo apt-get -y install fzf

      - name: Download Neovim
        run: |
          mkdir -p /tmp/nvim
          wget -q https://github.com/neovim/neovim/releases/download/nightly/nvim.appimage -O /tmp/nvim/nvim.appimage
          cd /tmp/nvim
          chmod a+x ./nvim.appimage
          ./nvim.appimage --appimage-extract
          echo "/tmp/nvim/squashfs-root/usr/bin/" >> $GITHUB_PATH

      - name: Install python3
        uses: actions/setup-python@v4
        env:
          DEBUG_SSH: ${{ secrets.DEBUG_SSH }}
        if: ${{ env.DEBUG_SSH == 'true' }}
        with:
          python-version: '3.x'
            # architecture: 'x64' #defaults to x64

      - name: Install python neovim module
        env:
          DEBUG_SSH: ${{ secrets.DEBUG_SSH }}
        if: ${{ env.DEBUG_SSH == 'true' }}
        run: |
          pip3 install neovim

      - name: Setup upterm session
        env:
          DEBUG_SSH: ${{ secrets.DEBUG_SSH }}
        if: ${{ env.DEBUG_SSH == 'true' }}
        uses: lhotari/action-upterm@v1
        with:
          ## limits ssh access and adds the ssh public key for the user which triggered the workflow
          # limit-access-to-actor: true
          ## limits ssh access and adds the ssh public keys of the listed GitHub users
          limit-access-to-users: hjdivad,rwjblue

      - name: test
        env:
          DEBUG: ${{ secrets.Debug }}
        run: tests/run

  test-binutils:
    name: test binutils
    env:
      RUST_LOG: trace

    runs-on: ubuntu-latest
    timeout-minutes: 2

    steps:
      - name: Environment information
        run: |
          uname
          uname -a

      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-nextest

      - run: sudo apt-get update && sudo apt-get install -y zsh

      - run: cd packages/binutils && cargo nextest run --workspace --no-fail-fast

