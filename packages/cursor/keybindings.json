// Place your key bindings in this file to override the defaults
[
  {
    "key": "cmd+i",
    "command": "composerMode.agent"
  },
  {
    "key": "cmd+f cmd+f",
    "command": "workbench.action.quickOpen"
  },
  {
    "key": "cmd+p",
    "command": "-workbench.action.quickOpen"
  },
  {
    "key": "cmd+p",
    "command": "workbench.action.showCommands"
  },
  {
    "key": "shift+cmd+p",
    "command": "-workbench.action.showCommands"
  },
  {
    "key": "cmd+j",
    "command": "workbench.action.debug.stepOver",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "f10",
    "command": "-workbench.action.debug.stepOver",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "shift+cmd+j",
    "command": "workbench.action.debug.stepInto",
    "when": "debugState != 'inactive'"
  },
  {
    "key": "f11",
    "command": "-workbench.action.debug.stepInto",
    "when": "debugState != 'inactive'"
  },
  {
    "key": "shift+cmd+k",
    "command": "workbench.action.debug.stepOut",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "shift+f11",
    "command": "-workbench.action.debug.stepOut",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "cmd+d cmd+c",
    "command": "workbench.action.debug.continue",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "f5",
    "command": "-workbench.action.debug.continue",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "ctrl+`",
    "command": "workbench.debug.action.toggleRepl",
    "when": "workbench.panel.repl.view.active"
  },
  {
    "key": "shift+alt+cmd+y",
    "command": "-workbench.debug.action.toggleRepl",
    "when": "workbench.panel.repl.view.active"
  },
  {
    "key": "cmd+b",
    "command": "editor.debug.action.toggleBreakpoint",
    "when": "debuggersAvailable && disassemblyViewFocus || debuggersAvailable && editorTextFocus"
  },
  {
    "key": "f9",
    "command": "-editor.debug.action.toggleBreakpoint",
    "when": "debuggersAvailable && disassemblyViewFocus || debuggersAvailable && editorTextFocus"
  },
  {
    "key": "alt+cmd+b",
    "command": "editor.debug.action.conditionalBreakpoint"
  },
  {
    "key": "shift+cmd+b",
    "command": "debug.enableOrDisableBreakpoint"
  }
]
